1
00:00:02,210 --> 00:00:06,915
For loops iterate over every element in a sequence,

2
00:00:06,915 --> 00:00:11,694
and while loops iterate until they're stopping condition is met.

3
00:00:11,694 --> 00:00:14,430
This is sufficient for most purposes but we

4
00:00:14,430 --> 00:00:18,315
sometimes need more precise control over when a loop should end.

5
00:00:18,315 --> 00:00:22,050
In these cases, we use the break keyword.

6
00:00:22,050 --> 00:00:26,990
A loop will terminate immediately if it encounters a break statement.

7
00:00:26,990 --> 00:00:32,018
We can use this to end the loop if we detect that some condition has been met.

8
00:00:32,018 --> 00:00:36,360
The break keyword can be used in both for and while loops.

9
00:00:36,360 --> 00:00:42,555
For example, suppose you want to load a cargo ship with a list of items called manifest.

10
00:00:42,555 --> 00:00:46,665
This list contains tuples of items and their weights.

11
00:00:46,665 --> 00:00:50,040
Ideally, you would like to load all the items on

12
00:00:50,040 --> 00:00:53,580
the ship but the ship has a maximum weight capacity.

13
00:00:53,580 --> 00:00:56,820
Therefore, when the ship's capacity is reached,

14
00:00:56,820 --> 00:00:58,755
you want to stop loading.

15
00:00:58,755 --> 00:01:02,615
To accomplish this, let's use a for loop loading

16
00:01:02,615 --> 00:01:07,595
each item and keeping track of the weight of all the items we have loaded so far.

17
00:01:07,595 --> 00:01:11,390
Here, we check if the ship's total cargo weight reaches

18
00:01:11,390 --> 00:01:15,605
its maximum capacity of 100 with each addition of cargo.

19
00:01:15,605 --> 00:01:19,740
If it does, we use a break statement to stop loading.

20
00:01:19,740 --> 00:01:23,300
If not, we load the next item and add on its weight.

21
00:01:23,300 --> 00:01:25,715
Here's what we end up loading.

22
00:01:25,715 --> 00:01:27,388
That's not good.

23
00:01:27,388 --> 00:01:30,890
The boat is severely over its weight limit of 100.

24
00:01:30,890 --> 00:01:33,800
The break statement did prevent us from putting every item on

25
00:01:33,800 --> 00:01:38,130
the boat but we still exceeded the limit by 111.

26
00:01:38,130 --> 00:01:41,830
It's difficult to see what's gone wrong.

27
00:01:41,830 --> 00:01:46,060
One strategy we can use is to add print statements in the code.

28
00:01:46,060 --> 00:01:49,885
This is a really handy technique as it can give us some insight

29
00:01:49,885 --> 00:01:53,770
into what happens in the code as it's running step-by-step.

30
00:01:53,770 --> 00:01:57,640
Having print statements frequently that give context can

31
00:01:57,640 --> 00:02:01,431
really assist us in understanding what went wrong here.

32
00:02:01,431 --> 00:02:04,536
Here's the loop with debugging statements added.

33
00:02:04,536 --> 00:02:09,372
Debugging is the process of identifying and removing errors in your code.

34
00:02:09,372 --> 00:02:13,845
Here, we can see that we didn't break until the weight exceeded 100,

35
00:02:13,845 --> 00:02:17,415
when really, we should break before that item is added.

36
00:02:17,415 --> 00:02:20,850
Additionally, we can see that the cheeses still could

37
00:02:20,850 --> 00:02:24,120
have fit if the machine wasn't added.

38
00:02:24,120 --> 00:02:26,160
This brings us to another statement.

39
00:02:26,160 --> 00:02:29,685
Sometimes, rather than breaking out of the loop completely,

40
00:02:29,685 --> 00:02:34,680
there will be times we want to skip simply one iteration of the loop.

41
00:02:34,680 --> 00:02:38,440
In this case, we would use the continue keyword.

42
00:02:38,440 --> 00:02:40,990
In this example, we iterate through a list of

43
00:02:40,990 --> 00:02:45,115
foods and increment account if the food is a fruit.

44
00:02:45,115 --> 00:02:50,785
Here, we terminate an iteration if the food is not found in fruit.

45
00:02:50,785 --> 00:02:53,995
Otherwise, we add one to fruit count.

46
00:02:53,995 --> 00:02:57,730
So when food is hummus or toast in this loop,

47
00:02:57,730 --> 00:03:00,540
the rest of the loop is completely skipped.
