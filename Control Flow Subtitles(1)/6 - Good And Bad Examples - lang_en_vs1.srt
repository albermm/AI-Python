1
00:00:03,210 --> 00:00:10,135
We'll go over some good and bad examples of Boolean expressions used in if statements.

2
00:00:10,135 --> 00:00:13,595
While true is a valid Boolean expression,

3
00:00:13,595 --> 00:00:18,770
it's not exactly useful as a condition as it always evaluates to true.

4
00:00:18,770 --> 00:00:21,590
So the intended code will always get run.

5
00:00:21,590 --> 00:00:25,975
Similarly, if false is not a condition you should run either,

6
00:00:25,975 --> 00:00:29,460
the condition and the if statement would never occur.

7
00:00:29,460 --> 00:00:33,525
In this example, is cold or not is cold,

8
00:00:33,525 --> 00:00:35,940
will always evaluate to true.

9
00:00:35,940 --> 00:00:39,340
If it is cold, then is cold will be true.

10
00:00:39,340 --> 00:00:43,095
If it is not cold, then not is code will be true.

11
00:00:43,095 --> 00:00:48,035
This has no use as a condition because the indented code will always get run.

12
00:00:48,035 --> 00:00:50,860
This code is valid in Python,

13
00:00:50,860 --> 00:00:52,975
but it is not a Boolean expression,

14
00:00:52,975 --> 00:00:55,110
although it reads like one.

15
00:00:55,110 --> 00:00:57,670
The reason is that the expression to the right of

16
00:00:57,670 --> 00:01:01,505
or is not a Boolean expression, it's a string.

17
00:01:01,505 --> 00:01:04,860
Later, we'll discuss what happens when you use

18
00:01:04,860 --> 00:01:09,165
a non-boolean type object in place of Boolean.

19
00:01:09,165 --> 00:01:11,030
It takes a few more characters,

20
00:01:11,030 --> 00:01:14,695
but this is now unambiguously a Boolean expression.

21
00:01:14,695 --> 00:01:21,200
The expressions on both sides of the logical operator or are each checking something.

22
00:01:21,200 --> 00:01:23,270
This is a valid condition,

23
00:01:23,270 --> 00:01:26,590
but we could express it more briefly and clearly.

24
00:01:26,590 --> 00:01:30,170
Is cold is a Booolean expression on its own right,

25
00:01:30,170 --> 00:01:35,525
so we can make the code more readable by using the variable itself instead.

26
00:01:35,525 --> 00:01:38,705
If you want to check whether a Boolean is false,

27
00:01:38,705 --> 00:01:41,310
you can use the "not" operator.

28
00:01:41,310 --> 00:01:45,370
Let's summarize the lessons from these examples.

29
00:01:45,370 --> 00:01:48,060
True and False are both Booleans,

30
00:01:48,060 --> 00:01:52,000
but it doesn't make sense to use if True or if False.

31
00:01:52,000 --> 00:01:54,970
Logical operators and, or,

32
00:01:54,970 --> 00:01:57,520
and not have specific meanings that

33
00:01:57,520 --> 00:02:01,240
aren't quite the same as their meanings in plain English.

34
00:02:01,240 --> 00:02:06,570
Make sure your Boolean expressions are being evaluated the way you expect them to.

35
00:02:06,570 --> 00:02:12,130
Don't compare a variable that is a Boolean with equals true or equals false.

36
00:02:12,130 --> 00:02:17,070
This comparison isn't necessary since the variable itself is a Boolean expression.
